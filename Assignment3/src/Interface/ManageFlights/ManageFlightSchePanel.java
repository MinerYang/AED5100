/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface.ManageFlights;

import Business.Airliners;
import Business.AirlinersDirectory;
import Business.Flight;
import Interface.ManageAirliners.CreateNewAirlinersPanel;
import java.awt.CardLayout;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cestdrama
 */
public class ManageFlightSchePanel extends javax.swing.JPanel {

    /**
     * Creates new form ManageFlightPanel
     */
    private JPanel CardSecePanel;
    private Airliners airliners;
    private AirlinersDirectory airlDir;
    public ManageFlightSchePanel(JPanel CardSecePanel, Airliners airliners, AirlinersDirectory airlDir) {
        initComponents();
        this.CardSecePanel=CardSecePanel;
        this.airliners=airliners;
        this.airlDir = airlDir;
        populateTable();       
          
    }
    
    //
    public void populateTable(){
        DefaultTableModel dtm=(DefaultTableModel)BTLflightsche.getModel();
        dtm.setRowCount(0);
        //for(Account account:accDir.getAccountList()){
        for(Flight flight:airliners.getFleetlist()){
            Object[] row=new Object[4];
            row[0]=flight;
            SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
            String strdate=sdf.format(flight.getDate());
            row[1]=strdate;
            row[2]=flight.getFromlocaltion();
            row[3]=flight.getTolocation();          
            dtm.addRow(row);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        BTLflightsche = new javax.swing.JTable();
        addnfBTN = new javax.swing.JButton();
        searchBTN = new javax.swing.JButton();
        deleteBTN = new javax.swing.JButton();
        backBTN = new javax.swing.JButton();
        viewdetailBTN = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 2, 24)); // NOI18N
        jLabel1.setText("Manage Flight");

        BTLflightsche.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Flight Number", "    Date", " Departure", "   Arrival"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(BTLflightsche);

        addnfBTN.setText("Add  Flight>>");
        addnfBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addnfBTNActionPerformed(evt);
            }
        });

        searchBTN.setText("Search Flight>>");
        searchBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchBTNActionPerformed(evt);
            }
        });

        deleteBTN.setText("Delete");
        deleteBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteBTNActionPerformed(evt);
            }
        });

        backBTN.setText("<<Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        viewdetailBTN.setText("View Details");
        viewdetailBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewdetailBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addGap(130, 130, 130))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 401, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(22, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(searchBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(viewdetailBTN))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(addnfBTN, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(deleteBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backBTN)
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 241, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(addnfBTN)
                    .addComponent(searchBTN))
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteBTN)
                    .addComponent(viewdetailBTN))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(backBTN)
                .addGap(80, 80, 80))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void addnfBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addnfBTNActionPerformed
        // TODO add your handling code here:
        AddNewFlightPanel panel=new AddNewFlightPanel(this,CardSecePanel,airliners,airlDir); 
        CardSecePanel.add("CreateAccPanel",panel);
        CardLayout layout=(CardLayout) CardSecePanel.getLayout();
        layout.next(CardSecePanel);
    }//GEN-LAST:event_addnfBTNActionPerformed

    private void searchBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchBTNActionPerformed
        // TODO add your handling code here:
        SearchMethodPanel panel=new SearchMethodPanel(CardSecePanel,airliners); 
        CardSecePanel.add("SearchMethodPanel",panel);
        CardLayout layout=(CardLayout) CardSecePanel.getLayout();
        layout.next(CardSecePanel);
        
                
    }//GEN-LAST:event_searchBTNActionPerformed

    private void deleteBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteBTNActionPerformed
        // TODO add your handling code here:
        int selerow=BTLflightsche.getSelectedRow();
        if (selerow>=0){
            int dialogButton=JOptionPane.YES_NO_OPTION;
            int dialogResult=JOptionPane.showConfirmDialog(null,"Would you like to delete this airliner?","WARNING",dialogButton);
            if(dialogResult==JOptionPane.YES_OPTION){
                Flight flight=(Flight) BTLflightsche.getValueAt(selerow,0);
                airliners.deleteflight(flight);
                populateTable();
            }
        }
        else{
            JOptionPane.showMessageDialog(null,"Please select a row you want to delete!","WARNING",JOptionPane.WARNING_MESSAGE);
        }
        
    }//GEN-LAST:event_deleteBTNActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        // TODO add your handling code here:
        CardSecePanel.remove(this);
        CardLayout layout=(CardLayout) CardSecePanel.getLayout();
        layout.previous(CardSecePanel);
    }//GEN-LAST:event_backBTNActionPerformed

    private void viewdetailBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewdetailBTNActionPerformed
        // TODO add your handling code here:
        int row = BTLflightsche.getSelectedRow();
        if(row<0) {
            JOptionPane.showMessageDialog(null, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Flight flight = (Flight)BTLflightsche.getValueAt(row,0);
        ViewFlightdetailPanel panel = new ViewFlightdetailPanel(CardSecePanel, flight);
        CardSecePanel.add("ViewAirlinersPanel", panel);
        CardLayout layout = (CardLayout)CardSecePanel.getLayout();
        layout.next(CardSecePanel);
    }//GEN-LAST:event_viewdetailBTNActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BTLflightsche;
    private javax.swing.JButton addnfBTN;
    private javax.swing.JButton backBTN;
    private javax.swing.JButton deleteBTN;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton searchBTN;
    private javax.swing.JButton viewdetailBTN;
    // End of variables declaration//GEN-END:variables
}
